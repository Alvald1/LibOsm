/*
    Copyright © 2010 par Marc Sibert

    This file is part of LIBOSM

    LIBOSM is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    LIBOSM is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with LIBOSM.  If not, see <http://www.gnu.org/licenses/>.
 */

/**
 * \file
 * \author Marc Sibert
 */

// Class automatically generated by Dev-C++ New Class wizard

#include "changeset.h" // class's header file
#include <iomanip>
#include <sstream>
#include "osm_exception.h"

using namespace std;

void Changeset::setAttribut(const string& aKey, const string& aValue)
{
    istringstream iss(aValue);
    if (aKey == "created_at") iss >> fCreatedAt;
    else if (aKey == "closed_at") iss >> fClosedAt;
    else if (aKey == "open") {
        string s;
        iss >> s;
        if (s == "false") fOpen = false;
        else if (s == "true") fOpen = true;
        else throw OsmException("État incorrect pour l'attribut open (" + aValue + ")",
                                __FILE__, __LINE__, __PRETTY_FUNCTION__);
    }
    else if (aKey == "min_lon") iss >> fMinLon;
    else if (aKey == "min_lat") iss >> fMinLat;
    else if (aKey == "max_lon") iss >> fMaxLon;
    else if (aKey == "max_lat") iss >> fMaxLat;
    else Top::setAttribut(aKey, aValue);
}

const string Changeset::NOM = "changeset";

ostream& Changeset::afficher(ostream& aStream) const
{
    aStream << Top::afficher(aStream);
    aStream << "created_at=\"" << fCreatedAt.iso8601() << "\" ";
    aStream << "closed_at=\"" << fClosedAt.iso8601() << "\" ";
    aStream << "open=\"" << (fOpen ? "true" : "false") << "\" ";
    aStream << "min_lon=\"" << fMinLon << "\" ";
    aStream << "min_lat=\"" << fMinLon << "\" ";
    aStream << "max_lon=\"" << fMinLon << "\" ";
    aStream << "max_lat=\"" << fMinLon << "\" ";
    return aStream;
}

ostream& operator<<(ostream& aStream, const Changeset& aChangeset)
{
    aStream << "\t<changset ";
    aChangeset.afficher(aStream);
/*
    aStream << setprecision(10) << "lat=\"" << aNode.latitude() << "\"";
    aStream << " lon=\"" << aNode.longitude() << "\">" << endl;
*/
    aChangeset.afficherTags(aStream);
    aStream << "\t</changeset>" << endl;
    return aStream;
}

